---
const { items } = Astro.props;
import AccordionItem from "./AccordionItem.astro";
---

<div class="accordion w-full">
  {
    items.map((item: string, index: number) => {
      let border =
        index === items.length - 1 ? "border-0" : "border-b-2 border-base-100";
      return (
        <AccordionItem
          border={border}
          id={index}
          title={item["title"]}
          content={item["content"]}
        />
      );
    })
  }
</div>

<script>
  function accordionSetup() {
    const buttons = document.querySelectorAll(
      '[id^="accordion-button-"]'
    ) as NodeListOf<HTMLElement>;
    const accordions = document.querySelectorAll(
      '[id^="accordion-content-"]'
    ) as NodeListOf<HTMLElement>;

    function handleClick(button: HTMLElement) {
      const didAccordionExpand = button.getAttribute("aria-expanded");
      const controlsWhatElement = button.getAttribute("aria-controls");
      const accordion = document.getElementById(controlsWhatElement);
      const chevron = document.querySelector(".accordion__chevron") as HTMLElement;

      for (const a of accordions) {
        if (a !== accordion) {
          a.style.maxHeight = "0px";
          a.classList.add("hidden");
          const idOfAccordion = a.getAttribute("id");
          const buttonThatControlsThisAccordion = document.querySelector(
            `[aria-controls="${idOfAccordion}"]`
          );
          buttonThatControlsThisAccordion.setAttribute(
            "aria-expanded",
            "false"
          );
          chevron.classList.remove("rotate-180");
        } else {
        accordion.classList.remove("hidden");
        accordion.style.maxHeight = accordion.scrollHeight + "px";
        chevron.classList.add("rotate-180");
        button.setAttribute("aria-expanded", "true");
      }
      }

      if (didAccordionExpand === "true") {
        accordion.style.maxHeight = "0px";
        chevron.classList.remove("rotate-180");
        button.setAttribute("aria-expanded", "false");
        setTimeout(() => {
          accordion.classList.add("hidden");
        }, 300);
      } else {
        accordion.classList.remove("hidden");
        accordion.style.maxHeight = accordion.scrollHeight + "px";
        chevron.classList.add("rotate-180");
        button.setAttribute("aria-expanded", "true");
      }
    }

    buttons.forEach((button) => {
      button.addEventListener("click", () => handleClick(button));
    });
  }

  // // runs on initial page load
  accordionSetup();

  // // runs on view transitions navigation
  document.addEventListener("astro:after-swap", accordionSetup);
</script>
